predicate cumulatives(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
predicate gecode_nooverlap(array [int] of var int: x,array [int] of var int: w,array [int] of var int: y,array [int] of var int: h);
array [1..28] of int: X_INTRODUCED_106_ = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
var 0..56: clock_cycles:: output_var;
var 0..200: X_INTRODUCED_0_;
var 0..200: X_INTRODUCED_1_;
var 0..200: X_INTRODUCED_2_;
var 0..200: X_INTRODUCED_3_;
var 0..200: X_INTRODUCED_4_;
var 0..200: X_INTRODUCED_5_;
var 0..200: X_INTRODUCED_6_;
var 0..200: X_INTRODUCED_7_;
var 0..200: X_INTRODUCED_8_;
var 0..200: X_INTRODUCED_9_;
var 0..200: X_INTRODUCED_10_;
var 0..200: X_INTRODUCED_11_;
var 0..200: X_INTRODUCED_12_;
var 0..200: X_INTRODUCED_13_;
var 0..200: X_INTRODUCED_14_;
var 0..200: X_INTRODUCED_15_;
var 0..200: X_INTRODUCED_16_;
var 0..200: X_INTRODUCED_17_;
var 0..200: X_INTRODUCED_18_;
var 0..200: X_INTRODUCED_19_;
var 0..200: X_INTRODUCED_20_;
var 0..200: X_INTRODUCED_21_;
var 0..200: X_INTRODUCED_22_;
var 0..200: X_INTRODUCED_23_;
var 0..200: X_INTRODUCED_24_;
var 0..200: X_INTRODUCED_25_;
var 0..200: X_INTRODUCED_26_;
var 0..200: X_INTRODUCED_27_;
array [1..28] of var int: s = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_];
array [1..28] of var int: d = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2];
array [1..28] of var int: p = [2,2,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,1,1,2,2,2,2,1,1,1,1];
constraint int_lin_le([1,-1],[X_INTRODUCED_8_,X_INTRODUCED_0_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_8_,X_INTRODUCED_1_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_9_,X_INTRODUCED_2_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_9_,X_INTRODUCED_3_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_10_,X_INTRODUCED_4_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_10_,X_INTRODUCED_5_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_11_,X_INTRODUCED_6_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_11_,X_INTRODUCED_7_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_26_,X_INTRODUCED_8_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_12_,X_INTRODUCED_9_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_13_,X_INTRODUCED_10_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_27_,X_INTRODUCED_11_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_14_,X_INTRODUCED_12_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_16_,X_INTRODUCED_12_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_15_,X_INTRODUCED_13_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_17_,X_INTRODUCED_13_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_18_,X_INTRODUCED_14_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_18_,X_INTRODUCED_15_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_19_,X_INTRODUCED_16_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_19_,X_INTRODUCED_17_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_20_,X_INTRODUCED_18_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_22_,X_INTRODUCED_18_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_21_,X_INTRODUCED_19_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_23_,X_INTRODUCED_19_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_24_,X_INTRODUCED_20_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_24_,X_INTRODUCED_21_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_25_,X_INTRODUCED_22_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_25_,X_INTRODUCED_23_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_26_,X_INTRODUCED_24_],-2);
constraint int_lin_le([1,-1],[X_INTRODUCED_27_,X_INTRODUCED_25_],-2);
constraint cumulatives(s,d,d,clock_cycles);
constraint gecode_nooverlap(s,d,p,X_INTRODUCED_106_);
solve  minimize clock_cycles;
